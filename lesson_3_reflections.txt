When would you want to use a remote repository rather than keeping all your work
local?

    So that it can be shared with others / worked on at the same time as others / backed up in case of data loss

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    To ensure that the user has control over each step in the process - this follows through the design philosophy applied
    to the methods used to apply commits, too. As changes could be made to the repository in your absence that affects the code you are working on.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

   Fork - This applies on github itself. It copies someone else's repository to your profile, so that you can make changes to your version/
or download it to your computer and then make changes to it.

    Clone - This applies on your computer. You clone a repository either from github or from an existing repository,
and the commit id tells you what state the repository will be in. 

    Branch - a separate chain of commits to a repository. there could be multiple branches of the same repository and you
would start a new one when you added a new feature, then merge back in once you were sure
it was production quality.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    This gives you a source you can refer back to as being the state of the repository when it was last checked out.
	IE you can then compare your commits to this, and it forms a common ancestor with any
	subsequent commits anyone else makes on the main branch.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Easier - no need to learn Github which is a bit abstract
    Harder - having to manually track all changes, massively less efficient work structure, bug troubleshooting vastly complicated, simultaneous collaboration would be a lot trickier, merging changes
    would have to be done manually.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
